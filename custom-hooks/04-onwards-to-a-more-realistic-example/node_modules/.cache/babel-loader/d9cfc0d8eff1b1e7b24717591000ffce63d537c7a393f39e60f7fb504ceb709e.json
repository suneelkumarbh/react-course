{"ast":null,"code":"var _jsxFileName = \"/home/suneelkumar/Projects/react-course/custom-hooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const applyData = data => {};\n  const {\n    isLoading,\n    error,\n    sendRqeust: sendCreateRequest\n  } = useHttp(applyData);\n  const enterTaskHandler = async taskText => {\n    sendCreateRequest({\n      url: \"https://react-http-b8814-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      body: {\n        text: taskText\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    try {\n      const response = await fetch({});\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NewTask, \"7GIOoc0YiMycRJWjHF1R2iXOuQU=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useState","useHttp","Section","TaskForm","NewTask","props","applyData","data","isLoading","error","sendRqeust","sendCreateRequest","enterTaskHandler","taskText","url","method","body","text","headers","response","fetch","ok","Error","json","generatedId","name","createdTask","id","onAddTask","err","setError","message","setIsLoading"],"sources":["/home/suneelkumar/Projects/react-course/custom-hooks/04-onwards-to-a-more-realistic-example/src/components/NewTask/NewTask.js"],"sourcesContent":["import { useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nconst NewTask = (props) => {\n  const applyData = (data) => {};\n  \n  const {isLoading, error, sendRqeust: sendCreateRequest} = useHttp(applyData);\n  \n\n  const enterTaskHandler = async (taskText) => {\n    sendCreateRequest({\n      url: \"https://react-http-b8814-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      body: { text: taskText },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    try {\n      const response = await fetch(\n        \n        {\n          \n          \n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAMC,SAAS,GAAIC,IAAI,IAAK,CAAC,CAAC;EAE9B,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC,UAAU,EAAEC;EAAiB,CAAC,GAAGV,OAAO,CAACK,SAAS,CAAC;EAG5E,MAAMM,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3CF,iBAAiB,CAAC;MAChBG,GAAG,EAAE,iEAAiE;MACtEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QAAEC,IAAI,EAAEJ;MAAS,CAAC;MACxBK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAE1B,CAGA,CAAC,CACF;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMf,IAAI,GAAG,MAAMY,QAAQ,CAACI,IAAI,EAAE;MAElC,MAAMC,WAAW,GAAGjB,IAAI,CAACkB,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAEP,IAAI,EAAEJ;MAAS,CAAC;MAEvDR,KAAK,CAACuB,SAAS,CAACF,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,QAAQ,CAACD,GAAG,CAACE,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,OAAO;IAAA,wBACN,QAAC,QAAQ;MAAC,WAAW,EAAEpB,gBAAiB;MAAC,OAAO,EAAEJ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DC,KAAK,iBAAI;MAAA,UAAIA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChB;AAEd,CAAC;AAAC,GA9CIL,OAAO;EAAA,QAG+CH,OAAO;AAAA;AAAA,KAH7DG,OAAO;AAgDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}